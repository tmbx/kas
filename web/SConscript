# Hey, Emacs! This is a -*- Python -*- file!
#
# Copyright (C) 2006-2012 Opersys inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Import('BUILD_ENV opts_dict')
import os

wwwParent = "/" + apply(os.path.join, opts_dict['WWWDIR'].split(os.path.sep)[:-1])
wwwRoot = opts_dict['WWWDIR']

# Create the hierarchy of the directories to be created on the target. 
def InstallTree(treeDir, baseDir):
    install_list = []
    for s in os.walk(treeDir):
        (base, dirs, files) = s
        for d in dirs:
            targetDirPath = os.path.join(baseDir, base)
            Command(targetDirPath, None, [Mkdir("$TARGET")])
        for f in files:
            (_, ext) = os.path.splitext(f)
            if ext in [".pyc"]:
                continue
            if f in ["Makefile", "cscope.files"]:
                continue
            if f.endswith(".mako.py"):
                continue
            sourceFile = File(os.path.join(base, f))
            targetDir = Dir(os.path.join(baseDir, base))
            install_list.append(BUILD_ENV.Install(targetDir, sourceFile))
    return install_list

# The static data is installed in the root of the web directory.
staticTree = InstallTree('www', wwwParent)

# Individual application create their own directories.
kas_cfg = InstallTree('kas_cfg', wwwRoot)
freemium = InstallTree('freemium', wwwRoot)
kwmo = InstallTree('kwmo', wwwRoot)

tf_env = BUILD_ENV.Clone()
tf_env.Append(PYTHONDIR = opts_dict['PYTHONDIR'],
              WWWDIR = opts_dict['WWWDIR'],
              VIRTUALENV = opts_dict['VIRTUALENV'])

# Predefine LINESEPARATOR or Textfile will choke.
tf_env['LINESEPARATOR'] = os.linesep

# Install the platform configuration file for the web app.
cfg_kas = tf_env.Textfile('kas_cfg/teambox_cfg.py',
                          ["SYS_PATHS=['$PYTHONDIR']",
                           "SITE_DIRS=['$WWWDIR/kas_cfg']"])
inst_cfg_kas = tf_env.Install(source = cfg_kas,
                              target = os.path.join(opts_dict['WWWDIR'], 'kas_cfg'))
cfg_kwmo = tf_env.Textfile('kwmo/teambox_cfg.py',
                           ["SYS_PATHS=['$PYTHONDIR\']",
                            "SITE_DIRS=['$WWWDIR/kwmo']"])
inst_cfg_kwmo = tf_env.Install(source = cfg_kwmo,
                               target = os.path.join(opts_dict['WWWDIR'], 'kwmo'))
cfg_freemium = tf_env.Textfile('freemium/teambox_cfg.py',
                               ["SYS_PATHS=['$PYTHONDIR']",
                                "SITE_DIRS=['$WWWDIR/freemium']"])
inst_cfg_freemium = tf_env.Install(source = cfg_freemium,
                                   target = os.path.join(opts_dict['WWWDIR'], 'freemium'))

# Production.ini configuration files. Nothing to substitute in those
# just yet.
ini_kwmo = tf_env.Substfile('config/kwmo_production.ini.in',
                            SUBST_DICT = {})
ini_kwmo_inst = tf_env.InstallAs(source = ini_kwmo,
                                 target = os.path.join(opts_dict['WWWDIR'], 'kwmo/production.ini'))
ini_freemium = tf_env.Substfile('config/freemium_production.ini.in',
                                SUBST_DICT = {})
ini_freemium_inst = tf_env.InstallAs(source = ini_freemium,
                                     target = os.path.join(opts_dict['WWWDIR'], 'freemium/production.ini'))

install_list = staticTree + kas_cfg + freemium + kwmo 
install_list += inst_cfg_kas + inst_cfg_kwmo + inst_cfg_freemium
install_list += ini_freemium_inst + ini_kwmo_inst

common_templates = os.listdir("templates/base")
for ct in common_templates:
    for ws_loc in [os.path.join(wwwRoot, "kas_cfg/kascfg/templates"),
                   os.path.join(wwwRoot, "freemium/freemium/templates"),
                   os.path.join(wwwRoot, "kwmo/kwmo/templates")]:
        install_list += BUILD_ENV.Command(os.path.join(ws_loc, ct),
                                          os.path.join("templates/base", ct),
                                          Copy("$TARGET", "$SOURCE"))

# Kwsfetcher is a daemon going straight to the bin directory.
tf_env['KWMO_PATH'] = os.path.join(wwwRoot, "kwmo");
install_list += tf_env.Install(source = File("python/kwmo/kwsfetcher.py"),
                                  target = os.path.join(opts_dict['PYTHONDIR']))
kwsfetcher_sh = tf_env.Textfile(target = os.path.join(opts_dict['DESTDIR'], opts_dict['BINDIR'], "kwsfetcher"), 
                                source = ["#!/bin/sh",
                                          "export KWMO_PATH=$KWMO_PATH",
                                          "export VIRTUALENV=$VIRTUALENV",
                                          "export PYTHONPATH=$PYTHONDIR",
                                          "python $PYTHONDIR/" + "kwsfetcher.py" + ' $@'])
tf_env.AddPostAction(kwsfetcher_sh, Chmod("$TARGET", 0755))
install_list += kwsfetcher_sh

# More random files to copy.
random_files = ["cfgcommon.py", "strings_base.py"]
for rf in random_files:
    rfSrc = os.path.join("python/base", rf)
    rfTrg = opts_dict['PYTHONDIR']
    install_list = install_list + BUILD_ENV.Install(source = rfSrc, target = rfTrg)

# The Apache configurationye
apacheCfgTmpl = File(os.path.join("config", "teambox-site.conf.in"))
apacheCfgTarget = Dir("/etc/apache2/conf.d")
apacheCfgSource = File("config/teambox-site.conf")

tf_env.Substfile(apacheCfgTmpl, 
                 SUBST_DICT = {'\$WWWDIR': opts_dict['WWWDIR'],
                               '\$PYTHONDIR': opts_dict['PYTHONDIR'],
                               '\$VIRTUALENV': opts_dict['VIRTUALENV']})
install_list = install_list + Install(source = apacheCfgSource, 
                                      target = apacheCfgTarget)

Return('install_list')
                        
